# https://www.appveyor.com/docs/build-configuration/
# https://packaging.python.org/guides/supporting-windows-using-appveyor/
image:
  - Visual Studio 2017

platform:
  - x64

services:
  - mongodb

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth
  # usage on our rackspace account.
  - '%LocalAppData%\pip\Cache'

environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: 'cmd /E:ON /V:ON /C .\extra\appveyor\compiler.cmd'

  matrix:
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.5"
      PYTHON_ARCH: "64"

#      CMAKE_GENERATOR: Visual Studio 15 2017

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.5"
      PYTHON_ARCH: "64"

  MONGO_BINS: "C:\\mongodb\\bin"


init:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

build: off

install:

#  - "set CMAKE_GENERATOR=%CMAKE_GENERATOR% Win64"
#
#  - cmake --version
#
#  - git clone https://github.com/google/snappy.git ./snappy -b master
#  - cd ./snappy
#  - mkdir out
#  - cd out
#  - cmake .. -G "%CMAKE_GENERATOR%"
#
#  - cmake --build .
#  - cd ..

  - "SET PATH=%MONGO_BINS%;%PATH%"

  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "mongo --version"
  - "%CMD_IN_ENV% python -m pip install -U pip setuptools wheel"
  - "%CMD_IN_ENV% python -m pip install -r requirements.txt"
  - "%CMD_IN_ENV% python -m pip install -r requirements-dev.txt"

test_script:
  - "%CMD_IN_ENV% pytest -v -s"